279. Perfect Squares
Medium

Given an integer n, return the least number of perfect square numbers that sum to n.

A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.

 

Example 1:

Input: n = 12
Output: 3
Explanation: 12 = 4 + 4 + 4.
Example 2:

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
 

Constraints:

1 <= n <= 104


//Nlogn

#include <bits/stdc++.h>
using namespace std;
int dp[100001];
int solveTopDown(int n)
{
    if(n==0)
    {
        return 0;
    }
    if(n==1) return 1;

    if(dp[n]!=-1) return dp[n];

    int ans=INT_MAX;
    for(int i=1;i*i<=n;i++)
    {
        ans=min(ans,1+solveTopDown(n-i*i));
    }
    return dp[n]=ans;
}

int minSquareBottomUp(int n)
{
    vector<int> dp(n+1,0);
    dp[0]=0;
    dp[1]=1;

    for(int i=2;i<=n;i++)
    {
        int ans=INT_MAX;
        for(int j=1;j*j<=i;j++)
        {
            ans=min(ans,dp[i-j*j]);
        }
        dp[i]=ans+1;
    }
    return dp[n];
}
int main() {
    int n;
    cin>>n;
    memset(dp,-1,sizeof dp);
    cout<<minSquareBottomUp(n);
    return 0;
}
