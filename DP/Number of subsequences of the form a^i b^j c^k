Number of subsequences of the form a^i b^j c^k
Difficulty Level : Hard

Given a string, count number of subsequences of the form aibjck, i.e., it consists of i ’a’ characters, followed by j ’b’ characters, followed by k ’c’ characters where i >= 1, j >=1 and k >= 1.

Note: Two subsequences are considered different if the set of array indexes picked for the 2 subsequences are different.

Expected Time Complexity: O(n)

Examples:

Input  : abbc
Output : 3
Subsequences are abc, abc and abbc

Input  : abcabc
Output : 7
Subsequences are abc, abc, abbc, aabc
abcc, abc and abc


int countSubsequences(string s) 
{ 
    int aCount = 0;  
    int bCount = 0;
    int cCount = 0; 
  

    for (int i = 0; i < s.size(); i++) { 
        if (s[i] == 'a')                                  /* If current character is 'a', then 
           aCount = (1 + 2 * aCount);                     there are the following possibilities : 
                                                          a) Current character begins a new 
                                                          subsequence. 
                                                          b) Current character is part of aCount 
                                                          subsequences. 
                                                           c) Current character is not part of 
                                                           aCount subsequences. */
        
             
  
            else if (s[i] == 'b')                         /* If current character is 'b', then 
               bCount = (aCount + 2 * bCount);            there are following possibilities : 
                                                            a) Current character begins a new 
                                                            subsequence of b's with aCount 
                                                             subsequences. 
                                                            b) Current character is part of bCount 
                                                               subsequences. 
                                                            c) Current character is not part of 
                                                              bCount subsequences. */
         
             
  
        else if (s[i] == 'c') 
            cCount = (bCount + 2 * cCount); 
    } 
  
    return cCount; 
} 
